generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filteredRelationCount"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_POOL_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

model User {
  id         String   @id @default(uuid()) @db.Uuid
  email      String   @unique
  name       String   @db.VarChar(200)
  username   String   @unique @db.VarChar(200)
  customerId String   @db.VarChar(60)
  avatar     String?
  reviews    Review[]
  orders     Order[]
}

model Order {
  id     String      @id @default(uuid()) @db.Uuid
  user   User        @relation(fields: [userId], references: [id])
  userId String      @db.Uuid
  items  OrderItem[]
}

model OrderItem {
  id       String @id @default(uuid()) @db.Uuid
  price    Int    @db.Integer
  quantity Int    @db.Integer
  order    Order  @relation(fields: [orderId], references: [id])
  orderId  String @db.Uuid
  item     Item   @relation(fields: [itemId], references: [id])
  itemId   String @db.Uuid
}

model Item {
  id          String      @id @default(uuid()) @db.Uuid
  name        String      @db.VarChar(255)
  description String      @db.Text
  price       Int         @db.Integer
  thumbnail   String      @db.VarChar(255)
  brand       String      @db.VarChar(255)
  category    String      @db.VarChar(255)
  images      ItemImage[]
  reviews     Review[]
  orders      OrderItem[]

  @@index([category])
}

model ItemImage {
  id     String @id @default(uuid()) @db.Uuid
  link   String @db.VarChar(255)
  item   Item   @relation(fields: [itemId], references: [id])
  itemId String @db.Uuid
}

model Review {
  id      String @id @default(uuid()) @db.Uuid
  rating  Float  @db.Real
  comment String @db.VarChar(255)
  user    User   @relation(fields: [userId], references: [id])
  userId  String @db.Uuid
  item    Item   @relation(fields: [itemId], references: [id])
  itemId  String @db.Uuid

  @@index([userId, itemId])
}
